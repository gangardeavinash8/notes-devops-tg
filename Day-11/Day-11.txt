		
			JAVA 
		
		/			\
	ORACLE 			OPENJAVA
	OracleJava		  (Azul Java)
						openJDK
	
	Dev = Java 11
	
	Prod =  OPENJDK 17 

Standalone machine for Tomcat apache ( 8080 ) deployment.

1)  yum install java-devel  java-17*  -y 

Cross test :

			java
			
			javac 

How to set class path / ENV variable for Java 

	find  /usr/   -name java

	vi /root/.bash_profile

		export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64
	
	source ~/.bash_profile
	
	echo  $JAVA_HOME
	
	cd  /opt/
	
	Download tomcat 9  & extract it
	
	cd  /opt/tomcat-9/
	
	ls -ltr 
	
	cd  bin
	
	sh  startup.sh 
	
	netstat -plant
	
	Now open port 8080 from AWS and test on URL / IP address

2) Docker image for Tomcat apache (8080)


FROM rockylinux:9.3.20231119

MAINTAINER team-tg@gmail.com

RUN dnf install -y java-devel java-17*

RUN echo "export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64" >>  /root/.bash_profile

RUN source ~/.bash_profile 

COPY ./Dockerfile  /root/

#RUN  mkdir -p  /opt/tomcat

#WORKDIR  /opt/tomcat

ADD ./apache-tomcat-9.0.91.tar.gz   /opt/

WORKDIR /opt/apache-tomcat-9.0.91/bin

EXPOSE 8080 8081 8085 443

CMD ["/opt/apache-tomcat-9.0.91/bin/catalina.sh","run"]

-------------------------------------------------------------------

docker build -t myappserver:v1  --no-cache .

docker run --name c1  -dit  -P b6d0d5d9e4c9

docker tag  b6d0d5d9e4c9  cdtsbikaner/devops150624:v1.1

docker container commit 6299315abfab cdtsbikaner/devops150624:v1.1

docker login

docker push  cdtsbikaner/devops150624:v1.1


Now try to pull custom build and shared image from Dockerhub  ( Tomcat Apache)

	docker pull cdtsbikaner/devops150624:v1.1


-----------------------------------------------------------------------------------
Assignment no 2 ( Nginx Custom Image)
-------------------------------------------------------------------------------
Dockerfile
-----------------------------------------------------------------------------------
FROM rockylinux:9.3.20231119

MAINTAINER "sumit joshi | sumit@tg.com "

RUN yum install nginx -y

COPY ./nginx.conf   /etc/nginx/conf.d/default.conf

COPY ./index.html /usr/share/nginx/html

COPY ./Dockerfile  /root/

VOLUME /usr/share/nginx/html

VOLUME /etc/nginx

EXPOSE 80 443

CMD ["nginx","-g","daemon off;"]  # Put state of nginx in Foreground

# If we pass multiple CMD clasues for argument passing , The last CMD will overwrite with the lastest one.

---------------------------------------------------------------------------------------
nginx.conf
---------------------------------------------------------------------------------------
server {
        listen 80;
        server_name localhost;

        location / {
                root /usr/share/nginx/html;
                index index.html;
        }
}
------------------------------------------------------------------------------------------

echo "<h1>Welcome to new World of AI  </h1> "  >  index.html
------------------------------------------------------------------------------------------

Docker Pull info for nginx 

-------------------------------
docker pull cdtsbikaner/devops150624:nginxtestv1.2